Index: cz/spsmb/b3i/w08/StringBuffer_.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cz.spsmb.b3i.w08;\r\n\r\npublic class StringBuffer_ {\r\n    public static void main(String[] args) {\r\n        //inicializace, k dispozici 3 konstruktory\r\n        StringBuffer b1, b2, b3;\r\n        //inicializuje řetězec o kapacitě 16 znaků\r\n        b1 = new StringBuffer();\r\n        //inicializuje řetězec o kapacitě 100 znaků\r\n        b2 = new StringBuffer(100);\r\n        //inicializuje řetězec o kapacitě 20 znaků - 4 pro Ahoj a 16 jako rezervu\r\n        b3 = new StringBuffer(\"Ahoj\");\r\n\r\n        //Kapacitu řetězce je možné změnit 2 metodami\r\n        // 1. ensureCapacity(int k) - pro k větší, než je současná kapacita zajistí, že řetězec bude mít\r\n        //buď kapacitu o velikosti k, nebo dvojnásobek současné kapacity + 2 znaky navíc. Záleží na tom,\r\n        //co z toho je větší.\r\n        //2. setLength(int k) - pro k větší, než současná kapacita zvětší aktuální délku řetězce na k a\r\n        //kapacitu na dvojnásobek současné kapacity + 2 znaky.\r\n        //                    - pro k menší, nebo rovno současné kapacitě bude kapacita nezměněna a aktuální\r\n        //                    délka se nastaví na k\r\n\r\n        System.out.format(\"b1 délka:%d, kapacita:%d%n\", b1.length(), b1.capacity()); //0 16\r\n        System.out.format(\"b2 délka:%d, kapacita:%d%n\", b2.length(), b2.capacity()); //0 100\r\n        System.out.format(\"b3 délka:%d, kapacita:%d%n\", b3.length(), b3.capacity()); //4 20\r\n        b1.setLength(18);\r\n        b2.ensureCapacity(110);\r\n        b3.setLength(3);\r\n        System.out.format(\"b1 délka:%d, kapacita:%d%n\", b1.length(), b1.capacity());//18 34\r\n        System.out.format(\"b2 délka:%d, kapacita:%d%n\", b2.length(), b2.capacity());//0 202\r\n        System.out.format(\"b3 délka:%d, kapacita:%d%n\", b3.length(), b3.capacity());//3 20\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cz/spsmb/b3i/w08/StringBuffer_.java b/cz/spsmb/b3i/w08/StringBuffer_.java
--- a/cz/spsmb/b3i/w08/StringBuffer_.java	
+++ b/cz/spsmb/b3i/w08/StringBuffer_.java	
@@ -1,5 +1,7 @@
 package cz.spsmb.b3i.w08;
 
+import java.sql.SQLOutput;
+
 public class StringBuffer_ {
     public static void main(String[] args) {
         //inicializace, k dispozici 3 konstruktory
@@ -29,5 +31,33 @@
         System.out.format("b1 délka:%d, kapacita:%d%n", b1.length(), b1.capacity());//18 34
         System.out.format("b2 délka:%d, kapacita:%d%n", b2.length(), b2.capacity());//0 202
         System.out.format("b3 délka:%d, kapacita:%d%n", b3.length(), b3.capacity());//3 20
+        StringBuffer b = new StringBuffer("Ahoj");
+        System.out.println(b);
+        b.reverse();
+        System.out.println(b);
+        b = new StringBuffer("Ahaj ");
+        b.append("lidi");
+        System.out.println(b);
+        b.append(8);
+        System.out.println(b);
+        b.delete(5,9);
+        System.out.println(b);
+        b.deleteCharAt(0);
+        System.out.println(b);
+        b.insert(0,3.14);
+        System.out.println(b);
+        b.insert(1,"HOJ");
+        System.out.println(b);
+        b.replace(0,5,"3,");
+        System.out.println(b);
+        System.out.println(b.charAt(0));
+        b.setCharAt(1,'!');
+        System.out.println(b);
+        StringBuffer b10 = new StringBuffer("Ahoj");
+        String s1, s2, s3;
+        s1 = b10.toString();
+        s2 = b10.substring(1);
+        s3 = b10.substring(1,3);
+        System.out.format("s1:%s, s2:%s, s3:%s%n", s1, s2, s3);
     }
 }
